@import '../../bower_components/true/sass/true';
@import '../cadenza-core';

@mixin c-test-before() {
    $__components__: () !global;
}

@include test-module('c mixin') {
    $decls: ('margin': 10px, 'color': blue);

    @include test('should properly register component') {
        @include c-test-before();

        %foo {
            @include c($decls);
        }

        $key: _c-component-key('%foo');

        @include assert-equal(_get($__components__, $key), $decls);
    }
}

@include test-module('c-media mixin') {
    $media-query: 'max-width: 100px';

    @include test('should properly set media query for a component when declared inside selector') {
        @include c-test-before();
        $actual: null;

        %foo {
            @include c-media($media-query) {
                @include c((
                    height: 10px
                )) {
                    $actual: c();
                }
            }
        }

        @include assert-equal(_get($actual, 'media'), $media-query);
    }

    @include test('should properly set media query for a component when declared outside selector') {
        @include c-test-before();
        $actual: null;

        @include c-media($media-query) {
            %foo {
                @include c((
                    height: 10px
                )) {
                    $actual: c();
                }
            }
        }

        @include assert-equal(_get($actual, 'media'), $media-query);
    }

    @include test('should override ancestor media context') {
        @include c-test-before();
        $media-query-outer: 'min-width: 1px';
        $actual-inner: null;
        $actual-outer: null;

        @include c-media($media-query-outer) {        
            %foo {        
                @include c-media($media-query) {
                    @include c((height: 10px)) {
                        $actual-inner: c();
                    }
                }

                @include c((height: 10px)) {
                    $actual-outer: c(); 
                }
            }
        }

        @include assert-equal(_get($actual-inner, 'media'), $media-query);
        @include assert-equal(_get($actual-outer, 'media'), $media-query-outer);
    }
}


@include report();